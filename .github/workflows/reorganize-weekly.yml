name: Weekly Reorganize and Push
on:
  schedule:
    - cron: '0 0 * * 1' # Every Monday at midnight UTC
  workflow_dispatch: # Manual trigger option
jobs:
  reorganize-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout original repo
        uses: actions/checkout@v3
      - name: Reorganize structure
        run: |
          mkdir -p temp
          cd temp
          cp -r ../reports .
          cp -r ../summaries .
          # Collect all unique disease names (case-insensitive)
          declare -A disease_map
          for dir in reports/* summaries/*; do
            [ -d "$dir" ] || continue
            disease_name=$(basename "$dir")
            # Convert to lowercase for matching
            disease_lower=$(echo "$disease_name" | tr '[:upper:]' '[:lower:]')
            # Standardize to camel case (e.g., Multiple_Myeloma)
            disease_camel=$(echo "$disease_name" | awk -F'_' '{for(i=1;i<=NF;i++)$i=toupper(substr($i,1,1))tolower(substr($i,2));}1' OFS='')
            # Store camel case name, preferring summaries' presence
            if [[ "$dir" =~ ^summaries/ || -z "${disease_map[$disease_lower]}" ]]; then
              disease_map["$disease_lower"]="$disease_camel"
            fi
          done
          # Reorganize based on normalized names
          for disease_lower in "${!disease_map[@]}"; do
            disease_name="${disease_map[$disease_lower]}"
            mkdir -p "$disease_name/reports" "$disease_name/summaries"
            # Move reports (case-insensitive match)
            for report_dir in reports/*; do
              [ -d "$report_dir" ] || continue
              report_base=$(basename "$report_dir" | tr '[:upper:]' '[:lower:]')
              if [ "$report_base" = "$disease_lower" ]; then
                mv "$report_dir"/* "$disease_name/reports/" 2>/dev/null || true
                rmdir "$report_dir" 2>/dev/null || true
              fi
            done
            # Move summaries (case-insensitive match)
            for summary_dir in summaries/*; do
              [ -d "$summary_dir" ] || continue
              summary_base=$(basename "$summary_dir" | tr '[:upper:]' '[:lower:]')
              if [ "$summary_base" = "$disease_lower" ]; then
                mv "$summary_dir"/* "$disease_name/summaries/" 2>/dev/null || true
                rmdir "$summary_dir" 2>/dev/null || true
              fi
            done
          done
          rmdir reports summaries 2>/dev/null || true
          # Dynamic index.html
          echo "<!DOCTYPE html><html><body><h1>Health Buddy Reports</h1><ul>" > index.html
          for disease in *; do
            if [ -d "$disease" ] && [ "$disease" != "reports" ] && [ "$disease" != "summaries" ]; then
              echo "<li><a href=\"$disease/reports/\">$disease Reports</a></li>" >> index.html
              echo "<li><a href=\"$disease/summaries/\">$disease Summaries</a></li>" >> index.html
            fi
          done
          echo "</ul></body></html>" >> index.html
      - name: Push to new repo
        run: |
          cd temp
          git init
          git config user.name "ypff"
          git config user.email "yue.pu@student.fairfield.edu"
          git add .
          git commit -m "Weekly reorganized structure - $(date -u +'%Y-%m-%d %H:%M UTC')"
          git branch -M main
          git remote add origin https://x-access-token:${{ secrets.REPO_TOKEN }}@github.com/ypff/health_buddy_reports_page.git
          git push -f origin main

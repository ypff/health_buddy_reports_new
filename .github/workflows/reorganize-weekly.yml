name: Weekly Reorganize and Push
on:
  schedule:
    - cron: '0 0 * * 1'
  workflow_dispatch:
jobs:
  reorganize-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout original repo
        uses: actions/checkout@v3
      - name: Checkout target repo
        uses: actions/checkout@v3
        with:
          repository: ypff/health_buddy_reports_page
          token: ${{ secrets.REPO_TOKEN }}
          path: target
      - name: Reorganize structure
        run: |
          mkdir -p temp
          cd temp
          cp -r ../reports .
          cp -r ../summaries .
          declare -A topic_map
          for dir in reports/* summaries/*; do
            [ -d "$dir" ] || continue
            topic_name=$(basename "$dir")
            topic_lower=$(echo "$topic_name" | tr '[:upper:]' '[:lower:]')
            topic_camel=$(echo "$topic_name" | awk -F'_' '{for(i=1;i<=NF;i++)$i=toupper(substr($i,1,1))tolower(substr($i,2));}1' OFS='')
            if [[ "$dir" =~ ^summaries/ || -z "${topic_map[$topic_lower]}" ]]; then
              topic_map["$topic_lower"]="$topic_camel"
            fi
          done
          for topic_lower in "${!topic_map[@]}"; do
            topic_name="${topic_map[$topic_lower]}"
            mkdir -p "../target/$topic_name/reports" "../target/$topic_name/summaries"
            for report_dir in reports/*; do
              [ -d "$report_dir" ] || continue
              report_base=$(basename "$report_dir" | tr '[:upper:]' '[:lower:]')
              if [ "$report_base" = "$topic_lower" ]; then
                mv "$report_dir"/* "../target/$topic_name/reports/" 2>/dev/null || true
                rmdir "$report_dir" 2>/dev/null || true
              fi
            done
            for summary_dir in summaries/*; do
              [ -d "$summary_dir" ] || continue
              summary_base=$(basename "$summary_dir" | tr '[:upper:]' '[:lower:]')
              if [ "$summary_base" = "$topic_lower" ]; then
                mv "$summary_dir"/* "../target/$topic_name/summaries/" 2>/dev/null || true
                rmdir "$summary_dir" 2>/dev/null || true
              fi
            done
          done
          # Generate index.html
          echo "<!DOCTYPE html><html><head><meta charset=\"utf-8\"></head><body><h1>Health Buddy Reports</h1><p>Explore reports and summaries by topics:</p>" > "../target/index.html"
          for topic in *; do
            if [ -d "$topic" ] && [ "$topic" != "reports" ] && [ "$topic" != "summaries" ]; then
              echo "<h2>$topic</h2><ul>" >> "../target/index.html"
              find "$topic/reports" "$topic/summaries" -type f | while read -r file; do
                filename=$(basename "$file")
                if [[ "$filename" =~ [0-9]{14} ]]; then
                  timestamp="${BASH_REMATCH[0]}"
                  year=${timestamp:0:4}
                  month=${timestamp:4:2}
                  day=${timestamp:6:2}
                  hour=${timestamp:8:2}
                  minute=${timestamp:10:2}
                  second=${timestamp:12:2}
                  epoch=$(date -d "$year-$month-$day $hour:$minute:$second" +%s)
                  human_time="$year-$month-$day $hour:$minute:$second"
                  rel_path="${file#./}"
                  echo "$epoch|$rel_path|$human_time"
                else
                  echo "0|$file|Unknown Date"
                fi
              done | sort -r -n | cut -d'|' -f2- | while IFS='|' read -r path human_time; do
                file_name=$(basename "$path")
                echo "<li><a href=\"./$path\">$file_name</a> ($human_time)</li>" >> "../target/index.html"
              done
              echo "</ul>" >> "../target/index.html"
            fi
          done
          echo "</body></html>" >> "../target/index.html"
      - name: Push to new repo
        run: |
          cd ../target  # Correct path from temp/ to target/
          ls -la  # Debug: List contents to confirm target/ exists
          git config user.name "ypff"
          git config user.email "yue.pu@student.fairfield.edu"
          git add .
          git commit -m "Weekly update - $(date -u +'%Y-%m-%d %H:%M UTC')" || echo "No changes to commit"
          git push
